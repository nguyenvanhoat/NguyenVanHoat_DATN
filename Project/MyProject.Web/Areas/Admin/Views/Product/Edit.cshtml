@using Service.Interface
@model MyProject.ViewModel.ProductDTO
@inject IShopService shopService

@{
    ViewData["Title"] = "Edit Product";
    var list = new SelectList(shopService.GetShop(), "Id", "ShopName");
}

<div class="card shadow mb-4 p-5">
    <form autocomplete="off" action="Create" method="post" id="form-product">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Thumbnail" />
        <div class="form-group">
            <label>Tên</label>
            <input type="text" class="form-control" asp-for="ProductName" placeholder="Enter Product">
            <span class="form-message"></span>
        </div>
        @*<div class="form-group">
        <label>Product Details</label>
        <textarea class="form-control" asp-for="ProductDetails" placeholder="Enter Product"></textarea>
        <span class="form-message"></span>
        </div>*@
        
       @* <div class="form-group">
            <label>Giá</label>
            <input type="number" class="form-control" asp-for="Price" placeholder="">
            <span class="form-message"></span>
        </div>*@
        <div class="form-group">
            <label>Hãng Xe</label>
            <select class="form-control" asp-items="list" asp-for="ShopId" disabled>
                <option value="">Chọn hãng</option>
            </select>
            <span class="form-message"></span>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" name="Trending" id="Trending">
            <label for="Trending">Is Trending</label>
        </div>
        <div class="form-check">
            <input type="hidden" class="form-check-input" asp-for="UpdateAt" value="@DateTime.Now">
        </div>
        <div class="form-group">
            <label>Mô tả</label>
            <textarea id="editor" asp-for="ProductDetails">
                @* <textarea asp-for="ProductDetails"></textarea>*@
            </textarea>
            <span class="form-message"></span>
        </div>
        <button type="button" id="onSubmit" class="btn btn-primary mt-2">Sửa</button>
    </form>
</div>

@section Scripts{
    <script>
        //$("#editor").html(@Model.ProductDetails);
        let editor;

        ClassicEditor
            .create(document.querySelector('#editor'))
            .then(newEditor => {
                editor = newEditor;
            })
            .catch(error => {
                console.error(error);
            });

            //$(document).ready(function(){
            //    console.log("@Model.ProductDetails");
            //    editor.setData('@Model.ProductDetails');
            //})
        Validator({
            form: "#form-product",
            errorSelector: ".form-message",
            submitSelector: "#onSubmit",
            rules: [
                Validator.isRequired("#ProductName", "Tên xe không được để trống"),
                Validator.isRequired("#ShopId", "Phải chọn một hãng"),
                Validator.lengthRequired("#ProductName", 2, 20, "Tên xe phải từ 2 đến 20 ký tự"),
            ],
            onClick: function (data) {
                console.log(data);
                if (data) {
                    $(document).ready(function () {
                        //var myFile = $('#File').prop('files');
                        //var input = document.getElementById("#File");
                        //var files = input.files;
                        //var files = $('input[type=file]').val()
                        //let fileData = document.getElementById('#File').files[0];
                        //var files = $("#fileInput")[0].files[0];
                        //var props = $('#files').prop('files');
                        //var files = props[0];
                        //var files = $('#File').prop("files");
                        var productDetails = editor.getData();
                        console.log(productDetails);
                        var formData = new FormData();
                        formData.append("Thumbnail", data.Thumbnail);
                        formData.append("Id", data.Id);
                        formData.append("ProductName", data.ProductName);
                        formData.append("ProductDetails", productDetails);
                        formData.append("Price", data.Price);
                        formData.append("Trending", data.Trending);
                        formData.append("ShopId", data.ShopId);
                        formData.append("UpdateAt", data.CreateAt);
                        //formData.append("File", files[0]);
                        //console.log(files[0]);
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Edit", "Product")',
                            data: formData,
                            //data: { model: { ProductName: data.ProductName, ProductDetails: data.ProductDetails, Price: data.Price, Trending: data.Trending, ShopId: data.ShopId, CreateAt: data.CreateAt, File: files[0] } },
                            //dataType: "json",
                            //contentType: "application/json;charset=utf-8",
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                console.log(response);
                                if (response.result == true) {
                                    if (response.isValid == false) {
                                        document.querySelector("#ProductName").parentElement.querySelector(".form-message").innerHTML = response.messProductname;
                                        document.querySelector("#ProductName").parentElement.querySelector(".form-message").classList.add('text-danger');
                                        if (response.messSlug) {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Oops...',
                                                text: response.messSlug
                                            })
                                        }
                                    }
                                    else {
                                        Swal.fire({
                                            position: 'top-end',
                                            icon: 'success',
                                            title: 'Cập nhật sản phẩm thành công!',
                                            showConfirmButton: false,
                                            timer: 2500
                                        });
                                        setTimeout(() => location.href = '@Url.Action("Index", "Product", "Admin")', 3000);
                                    }
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: response.message
                                    })
                                }
                            }
                        })
                    });
                }
            }
        });

        function filter(role, del) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Index", "Product", "Admin")',
                data: { role: role, delete: del },
                success: function () {
                    location.href = '@Url.Action("Index", "User", "Admin")/?role=' + role;
                }
            });
        }

        $(document).ready(function () {


            $("#filter-by-role").change(function () {
                var role = $("#filter-by-role option:selected").val();
                var del = $("#filter-delete option:selected").val();
                location.href = '@Url.Action("Index", "User", "Admin")&role=' + role;
            })
            $("#filter-delete").change(function () {
                var role = $("#filter-by-role option:selected").val();
                var del = $("#filter-delete option:selected").val();
                console.log(role);
                console.log(del);
                filter(role, del);
            })

        })
    </script>

}

    @section CkEditor{
    <script src="https://cdn.ckeditor.com/ckeditor5/35.4.0/classic/ckeditor.js"></script>
}

