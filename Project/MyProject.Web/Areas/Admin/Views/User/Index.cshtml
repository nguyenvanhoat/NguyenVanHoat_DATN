@using Microsoft.AspNetCore.Identity
@using MyProject.Utilities.Helper
@using Service
@using Service.Interface

@model PagedResult<MyProject.ViewModel.UserDTO>

@inject RoleManager<IdentityRole> _roleManage
@inject IRoleService _roleService;

@*@model IEnumerable<MyProject.Data.Entities.AppUser>*@

@{
    ViewBag.Title = "Danh sách AppUser";
    var listRole = new SelectList(_roleService.GetAllRole(), "Name", "Name");
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Thông tin tài khoản</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @*Form nhập mới user*@
                <form autocomplete="off" method="post" id="form-user">
                    <div class="form-group">
                        <label for="username">Tên đăng nhập</label>
                        <input type="text" class="form-control" name="UserName" id="UserName" aria-describedby="emailHelp" >
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" name="Email" id="Email" aria-describedby="emailHelp" >
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="password">Mật khẩu</label>
                        <input type="password" class="form-control" name="Password" id="Password" >
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="password">Vai Trò</label>
                        @*<select class="form-control" id="RoleId" name="RoleId">
                            <option value="2">User</option>
                            <option value="2">Admin</option>
                        </select>*@
                        <select class="form-control" asp-items="listRole" id="RoleId" name="RoleId">
                            
                        </select>
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <input type="hidden" class="form-control" name="CreateAt" id="CreateAt" value="@DateTime.Now">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" id="onSubmit" class="btn btn-primary insert">Tạo tài khoản</button>
            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Danh sách tài khoản</h6>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <button type="button" class="btn btn-success mb-3" data-toggle="modal" data-target="#exampleModal">
                Tạo tài khoản mới
            </button>
            
        </div>
        <div class="mb-3">
            <form class="d-flex justify-content-end">
                <select class="form-control w-32 mr-3" id="filter-delete">
                    <option value="">Filter Trạng Thái Xóa</option>
                    <option value="true">Đã Xóa</option>
                    <option value="false">Chưa Xóa</option>
                </select>
                <input type="text" class="form-control w-35 mr-3" id="searchString" placeholder="Tìm kiếm theo UserName" value="@ViewBag.SearchString">
                <input type="button" class="form-control w-30 btn btn-info" id="search" value="Tìm kiếm">
            </form>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Tên đăng nhập</th>
                        <th>Email</th>
                        <th>Mật khẩu</th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Data)
                    {
                        @if(item.DeleteAt == null){
                            <tr>
                                <td>@item.UserName</td>
                                <td>@item.Email</td>
                                <td>@Helper.ConvertPassword(item.PasswordHash)</td>
                                <td>
                                    <a data-id="@item.Id" class="btn btn-danger delete"><i class="fas fa-trash-alt"></i></a>
                                </td>
                            </tr>
                        }
                        else{
                            <tr class="bg-secondary text-warning">
                                <td>@item.UserName</td>
                                <td>@item.Email</td>
                                <td>@Helper.ConvertPassword(item.PasswordHash)</td>
                                <td>
                                    Deleted!
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="container">
        @if (Model.TotalItem > 0 && Model.TotalPages > 1)
        {
            <ul class="pagination justify-content-center">
                @if (Model.PageNumber > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="User" asp-action="Index" asp-route-pageNumber="1">Fisrt</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="User" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber-1)">Previous</a>
                    </li>
                }

                @for (var j = Model.StartPage; j <= Model.EndPage; j++)
                {
                    <li class="page-item @(j==Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-controller="User" asp-action="Index" asp-route-pageNumber="@j">@j</a>
                    </li>
                }

                @if (Model.PageNumber < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="User" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber+1)">Tiếp</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="User" asp-action="Index" asp-route-pageNumber="@Model.TotalPages">Trang trước</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>



@section Scripts{
    <script>
        $(document).ready(function(){
            $('#filter-delete').val('@ViewBag.Delete');
            $('#filter-by-role').val('@ViewBag.Role');
        })
        Validator({
            form: "#form-user",
            errorSelector: ".form-message",
            submitSelector: "#onSubmit",
            rules: [
                Validator.isRequired("#UserName"),
                Validator.isRequired("#Email"),
                Validator.isRequired("#Password"),
                Validator.isEmail("#Email"),
                Validator.isPassword("#Password"),
                Validator.lengthRequired("#UserName", 2, 10, "Username phải từ 2 đến 10 ký tự"),
                Validator.lengthRequired("#Email", 8, 20, "Email phải từ 10 đến 30 ký tự"),
                Validator.lengthRequired("#Password", 8, 20, "Độ dài mật khẩu không hợp lệ"),
            ],
            onClick: function (data) {
                console.log(data);
                if (data) {
                    $(document).ready(function () {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Insert", "User", "Admin")',
                            data: { user: { Email: data.Email, Password: data.Password, Username: data.UserName, CreateAt: data.CreateAt, Role: data.RoleId } },
                            //dataType: "json",
                            //contentType: "application/json;charset=utf-8",
                            success: function (response) {
                                console.log(response);
                                if (response.result == true) {
                                    if (response.isValid == false) {
                                        document.querySelector("#UserName").parentElement.querySelector(".form-message").innerHTML = response.messUsername;
                                        document.querySelector("#UserName").parentElement.querySelector(".form-message").classList.add('text-danger');
                                        document.querySelector("#Email").parentElement.querySelector(".form-message").innerHTML = response.messEmail;
                                        document.querySelector("#Email").parentElement.querySelector(".form-message").classList.add('text-danger');
                                    }
                                    else {
                                        Swal.fire({
                                            position: 'top-end',
                                            icon: 'success',
                                            title: 'Thêm tài khoản mới thành công',
                                            showConfirmButton: false,
                                            timer: 2500
                                        });
                                        setTimeout(() => location.href = '@Url.Action("Index", "User", "Admin")', 3000);
                                    }
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: response.message
                                    })
                                }
                            }
                        })
                    });
                }
            }
        });

        

        $(document).ready(function(){
            $('#filter-delete').val('@ViewBag.Delete');
            $(".delete").click(function () {
                Swal.fire({
                    title: 'Thông bá0!',
                    text: "Bạn có thực sự muốn xóa không!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Đồng Ý!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        var id = $(this).data('id');
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Delete", "User")',
                            data: { id: id },
                            //dataType: "json",
                            //contentType: "application/json;charset=utf-8",
                            success: function (response) {
                                if (response.result) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Xóa thành công.',
                                        'success'
                                    )
                                    setTimeout(() => location.href = '@Url.Action("Index", "User", "Admin")', 2000)
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: "Có lỗi trong quá trình xử lý"
                                    })
                                }
                            }
                        })

                    }
                })
            })
            $("#search").click(function () {
                console.log("haha");
                var del = $("#filter-delete option:selected").val();
                var searchString = $("#searchString").val();
                //console.log(trending);
                //console.log(del);
                //$.ajax(function(){
                //    type: 'GET',
                //    url: ,
                //    data: {pageNumber: 1, trending: trending, delete: delete, searchString: searchString},
                //})

                location.href = '@Url.Action("Index", "User")' + '/?pageNumber=' + 1 + '&delete=' + del + '&searchString=' + searchString;

            })
        })

        //$(document).ready(function(){
            

        //    $("#filter-by-role").change(function(){
        //        var role = $("#filter-by-role option:selected").val();
        //        var del = $("#filter-delete option:selected").val();
        //        location.href = '@Url.Action("Index", "User", "Admin")&role=' + role;
        //    })
        //    $("#filter-delete").change(function () {
        //        var role = $("#filter-by-role option:selected").val();
        //        var del = $("#filter-delete option:selected").val();
        //        console.log(role);
        //        console.log(del);
        //        filter(role, del);
        //    })

        //})
    </script>
}
